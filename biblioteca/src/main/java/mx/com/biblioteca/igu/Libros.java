/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.com.biblioteca.igu;

import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import mx.com.biblioteca.logica.ControladoraLogica;
import mx.com.biblioteca.logica.Libro;
/**
 *
 * @author Raquel Martínez
 */
public class Libros extends javax.swing.JFrame {

    ControladoraLogica controladoraLogica;
    /**
     * Creates new form Libros
     */
    public Libros() {
        controladoraLogica = new ControladoraLogica();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelLibros = new javax.swing.JPanel();
        bttAgregarLibro = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLibros = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panelLibros.setPreferredSize(new java.awt.Dimension(800, 600));

        bttAgregarLibro.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        bttAgregarLibro.setText("Agregar Libro");
        bttAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttAgregarLibroActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jButton2.setText("Modificar Libro");

        jScrollPane1.setViewportView(tbLibros);

        javax.swing.GroupLayout panelLibrosLayout = new javax.swing.GroupLayout(panelLibros);
        panelLibros.setLayout(panelLibrosLayout);
        panelLibrosLayout.setHorizontalGroup(
            panelLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLibrosLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(panelLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLibrosLayout.createSequentialGroup()
                        .addComponent(bttAgregarLibro)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        panelLibrosLayout.setVerticalGroup(
            panelLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLibrosLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttAgregarLibro)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttAgregarLibroActionPerformed
        AgregarLibro agregarlibro = new AgregarLibro();
        agregarlibro.setVisible(true);
        agregarlibro.setLocationRelativeTo(null);
    }//GEN-LAST:event_bttAgregarLibroActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTabla();
    }//GEN-LAST:event_formWindowOpened

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttAgregarLibro;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelLibros;
    private javax.swing.JTable tbLibros;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla(){
        // Define el modelo de la tabla - columnas, filas y configuración
        DefaultTableModel modelo = new DefaultTableModel(){
            // Evita que las columnas y tablas sean editables
            public boolean isCellEditable(int row, int column) {
            return false;
            }
        };
        
        // Define los títulos de las columnas - las asigna al modelo de la tabla
        String titulos[] = {"Id", "Titulo", "Autor", "Editorial", "Ejemplares"};
        modelo.setColumnIdentifiers(titulos);
        
        // Crea la lista de objetos que son traídos de la base de datos
        List<Libro> libros = new ArrayList<>();
        
        try {
            // Guarda dentro de la lista los libros traídos de la base de datos
            libros = controladoraLogica.consultarLibros();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(panelLibros, "Error al traer datos de los libros");
        }
        
        for (Libro lib: libros) {
            modelo.addRow(new Object[]{lib.getId(), lib.getTitulo(), lib.getAutor(), lib.getEditorial(), lib.getEjemplaresDisponibles()});
        }
         
        // Asigna el modelo de tabla a la tabla correspondiente
        tbLibros.setModel(modelo);
    }
}
